// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using brightIdeas.Models;

namespace brightIdeas.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("brightIdeas.Models.Idea", b =>
                {
                    b.Property<int>("ideaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("content")
                        .IsRequired();

                    b.Property<DateTime>("created_at");

                    b.Property<int?>("creatorUserId");

                    b.HasKey("ideaId");

                    b.HasIndex("creatorUserId");

                    b.ToTable("Ideas");
                });

            modelBuilder.Entity("brightIdeas.Models.Like", b =>
                {
                    b.Property<int>("likeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ideaId");

                    b.Property<int>("userId");

                    b.HasKey("likeId");

                    b.HasIndex("ideaId");

                    b.HasIndex("userId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("brightIdeas.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alias")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("brightIdeas.Models.Idea", b =>
                {
                    b.HasOne("brightIdeas.Models.User", "creator")
                        .WithMany("created")
                        .HasForeignKey("creatorUserId");
                });

            modelBuilder.Entity("brightIdeas.Models.Like", b =>
                {
                    b.HasOne("brightIdeas.Models.Idea", "theIdea")
                        .WithMany("likes")
                        .HasForeignKey("ideaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("brightIdeas.Models.User", "theUser")
                        .WithMany("likes")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
